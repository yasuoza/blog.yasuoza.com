<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[yasuoza diary]]></title>
  <link href="http://blog.yasuoza.com/atom.xml" rel="self"/>
  <link href="http://blog.yasuoza.com/"/>
  <updated>2014-07-06T12:19:48+00:00</updated>
  <id>http://blog.yasuoza.com/</id>
  <author>
    <name><![CDATA[Yasuharu Ozaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NeoBundleLazy 'VimFiler']]></title>
    <link href="http://blog.yasuoza.com/2014/07/04/neobundlelazy-vimfiler/"/>
    <updated>2014-07-04T09:05:17+00:00</updated>
    <id>http://blog.yasuoza.com/2014/07/04/neobundlelazy-vimfiler</id>
    <content type="html"><![CDATA[<p>To NeoBundleLazy <a href="https://github.com/Shougo/vimfiler.vim">VimFiler</a>, <a href="https://github.com/Shougo/neobundle.vim">NeoBundle</a> supports <code>explorer</code> option.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundleLazy <span class="s1">&#39;Shougo/vimfiler.vim&#39;</span><span class="p">,</span> {
</span><span class='line'>\   <span class="s1">&#39;depends&#39;</span> : <span class="s1">&#39;Shougo/unite.vim&#39;</span><span class="p">,</span>
</span><span class='line'>\   <span class="s1">&#39;autoload&#39;</span> : {
</span><span class='line'>\       <span class="s1">&#39;commands&#39;</span> : [<span class="s1">&#39;VimFiler&#39;</span><span class="p">,</span> <span class="s1">&#39;VimFilerCurrentDir&#39;</span><span class="p">,</span>
</span><span class='line'>\                     <span class="s1">&#39;VimFilerBufferDir&#39;</span><span class="p">,</span> <span class="s1">&#39;VimFilerSplit&#39;</span><span class="p">,</span>
</span><span class='line'>\                     <span class="s1">&#39;VimFilerExplorer&#39;</span><span class="p">,</span> <span class="s1">&#39;VimFilerDouble&#39;</span>]<span class="p">,</span>
</span><span class='line'>\       <span class="s1">&#39;explorer&#39;</span> : <span class="m">1</span>
</span><span class='line'>\   }
</span><span class='line'>\ }
</span></code></pre></td></tr></table></div></figure>


<p>This works with following option!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">let</span> <span class="k">g</span>:vimfiler_as_default_explorer <span class="p">=</span> <span class="m">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wow!:heart_eyes:</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How do you indent ruby's if..else assignment?]]></title>
    <link href="http://blog.yasuoza.com/2014/07/02/indent-rubys-if-dot-else-assignment/"/>
    <updated>2014-07-02T05:35:37+00:00</updated>
    <id>http://blog.yasuoza.com/2014/07/02/indent-rubys-if-dot-else-assignment</id>
    <content type="html"><![CDATA[<p>There are several ways to write <code>if...else</code> variable assignment.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@products</span> <span class="o">=</span> <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span>
</span><span class='line'>              <span class="no">Category</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:product</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">products</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>              <span class="no">Products</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>            <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@products</span> <span class="o">=</span> <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span>
</span><span class='line'>  <span class="no">Category</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:product</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">products</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="no">Products</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@products</span> <span class="o">=</span> <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span>
</span><span class='line'>    <span class="no">Category</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:product</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">products</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="no">Products</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@products</span> <span class="o">=</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="ss">:category</span><span class="o">]</span>
</span><span class='line'>    <span class="no">Category</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:product</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">products</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="no">Products</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which one do you prefer?</p>

<p>I prefer last one. Because this can keep horizontal length much smaller and <a href="https://github.com/vim-ruby/vim-ruby">vim-ruby</a>&rsquo;s auto indent also supports this syntax.</p>

<p>FYI:
<a href="http://stackoverflow.com/questions/8745299/recommended-indentation-style-for-ruby-if-blocks-that-assign-a-value-to-a-vari">http://stackoverflow.com/questions/8745299/recommended-indentation-style-for-ruby-if-blocks-that-assign-a-value-to-a-vari</a>
<a href="http://stackoverflow.com/questions/2925028/how-do-you-assign-a-variable-with-the-result-of-a-if-else-block">http://stackoverflow.com/questions/2925028/how-do-you-assign-a-variable-with-the-result-of-a-if-else-block</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年前半を振り返って]]></title>
    <link href="http://blog.yasuoza.com/2014/06/30/2014nian-qian-ban-wozhen-rifan-tute/"/>
    <updated>2014-06-30T13:14:49+00:00</updated>
    <id>http://blog.yasuoza.com/2014/06/30/2014nian-qian-ban-wozhen-rifan-tute</id>
    <content type="html"><![CDATA[<p>2014年も前半が終わった。2014年になっていろんなイベントもあり、
働き始めた頃とはだいぶ考え方が変わったことも多かった。</p>

<p>まず、スキルの話。ここで言うスキルは技術力、課題・問題を解決、回避出来る能力と自分は定義している。
これまではバックエンドからフロントエンドまですべてを予め網羅しようと考えて勉強してきた。
ただ、最近はすべてを前もって網羅しておく必要はなく、必要になったらその時に勉強すればいいやと思うようになった。
勉強はもともと好きだから、苦じゃないんだけど、これまでは知らないことに恐怖を感じていた事が多く、何かに追われて
勉強していた気がする。
これからはそうではなく、わからなかったことは今勉強できるという考えでスキルを伸ばして行ければと思う。</p>

<p>次に時間の話。タイム・イズ・マネー、この言葉はすべてを表していると思った。これまではそこまで時間を意識することは
なかったけど、これからは時間を大事にしたい。</p>

<p>最後にお金の話。お金は大事だと考えるようになった。
お金のためだけに働くのはたぶん無理だけど、やっぱり、お金が無いのは困る。
自分の中での優先順位でもお金はだいぶ低かったんだけど、この半年、具体的には結婚してからはお金の優先順位が上がった。
自分の中の優先順位、何が自分にとって幸せなのかは、これからもたまに考えたい。</p>

<p>これから30歳まではスケールするお金の稼ぎ方を慌てず考えていきたいなーなんて思った。</p>

<p>疲れやすいから、年末まで程よく一生懸命生きたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octpress rake new_post wrapper command]]></title>
    <link href="http://blog.yasuoza.com/2014/06/26/octpress-rake-new-post-wrapper-command/"/>
    <updated>2014-06-26T09:28:21+00:00</updated>
    <id>http://blog.yasuoza.com/2014/06/26/octpress-rake-new-post-wrapper-command</id>
    <content type="html"><![CDATA[<p>Save following content as <code>new-post</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>create <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">title</span><span class="o">=</span><span class="nv">$@</span>
</span><span class='line'>  rake new_post<span class="o">[</span><span class="s2">&quot;$title&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>usage<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;USAGE&quot;</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;    new-post &#39;This is my new post&#39;&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[[</span> -z <span class="nv">$1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'><span class="k">  </span>usage
</span><span class='line'>  <span class="nb">exit </span>1
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> !<span class="o">=</span> <span class="s2">&quot;&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'><span class="k">      </span><span class="nv">arg</span><span class="o">=</span><span class="nv">$1</span>
</span><span class='line'>    <span class="k">case</span> <span class="s2">&quot;$arg&quot;</span> in
</span><span class='line'>        -h <span class="p">|</span> --help <span class="o">)</span> usage
</span><span class='line'>                      <span class="nb">exit</span>
</span><span class='line'>                      <span class="p">;;</span>
</span><span class='line'>        * <span class="o">)</span>           create <span class="k">${</span><span class="nv">arg</span><span class="p">[@]</span><span class="k">}</span>
</span><span class='line'>                      <span class="nb">exit</span>
</span><span class='line'>                      <span class="p">;;</span>
</span><span class='line'>    <span class="k">esac</span>
</span><span class='line'><span class="k">    </span><span class="nb">shift</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>With above command, you can start writing new post via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>new-post <span class="s1">&#39;This is my super entry&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>:sunglasses::sunglasses::sunglasses:</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Support tmux with "reattach-to-user-namespace" to work in multi OS]]></title>
    <link href="http://blog.yasuoza.com/2014/06/15/support-tmux-with-reattach-to-user-to-work-in-multi-os/"/>
    <updated>2014-06-15T08:44:32+00:00</updated>
    <id>http://blog.yasuoza.com/2014/06/15/support-tmux-with-reattach-to-user-to-work-in-multi-os</id>
    <content type="html"><![CDATA[<p>When using tmux with &lsquo;reattach-to-user-namespace&rsquo; to enable clipboard copy paste support in OSX, you may have <code>~/.tmux.conf</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set-option -g default-command "reattach-to-user-namespace -l zsh"</span></code></pre></td></tr></table></div></figure>


<p>However with this configuration, tmux will fails on another platforms such as linux when reattach-to-user-namespace not installed.</p>

<p>So, your have at least 2 option to prevent it.</p>

<ul>
<li>Prepare another <code>~/.tmux.conf</code>.</li>
<li>Detect OS and use another <code>default-command</code> for each OS.</li>
</ul>


<p>First option is easy but dull. Who wants to write same content but very last line?</p>

<p>Second option seems not to be easy, but IS easy. You can do like:</p>

<h3>Detect OS pattern</h3>

<p><code>~/.tmux.conf</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'</span></code></pre></td></tr></table></div></figure>


<h3>Detect OS and load os specific configuration file pattern</h3>

<p><code>~/.tmux.conf</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if-shell 'test "$(uname -s)" = Darwin' 'source-file $HOME/.tmux-osx.conf'</span></code></pre></td></tr></table></div></figure>


<p>and <code>~/.tmux-osx.conf</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set-option -g default-command 'exec reattach-to-user-namespace -l zsh'</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it!</p>

<p>Read more:</p>

<p><a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/Usage.md">ChrisJohnsen/tmux-MacOSX-pasteboard/Usage.md</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[remove_const vs stub_const]]></title>
    <link href="http://blog.yasuoza.com/2014/06/09/remove-const-vs-stub-const/"/>
    <updated>2014-06-09T12:51:16+00:00</updated>
    <id>http://blog.yasuoza.com/2014/06/09/remove-const-vs-stub-const</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re writing test with rspec, sometime you want to CHANGE constants like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># foo.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Foo</span>
</span><span class='line'>  <span class="no">BAR</span> <span class="o">=</span> <span class="s1">&#39;bar&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># foo_spec.rb</span>
</span><span class='line'><span class="n">describe</span> <span class="no">Foo</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;have constant BAR&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Foo</span><span class="o">.</span><span class="n">BAR</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="s1">&#39;???&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can choose many ways to change constants.</p>

<h3>remove_const</h3>

<p>First options is to use <code>Module#remove_const</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># foo_spec.rb</span>
</span><span class='line'><span class="n">describe</span> <span class="no">Foo</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@__orig_bar</span> <span class="o">=</span> <span class="no">Foo</span><span class="o">::</span><span class="no">BAR</span><span class="o">.</span><span class="n">dup</span>
</span><span class='line'>    <span class="no">Foo</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:remove_const</span><span class="p">,</span> <span class="ss">:BAR</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Foo</span><span class="o">::</span><span class="no">BAR</span> <span class="o">=</span> <span class="s1">&#39;???&#39;</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="n">after</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># restore to original constant.</span>
</span><span class='line'>    <span class="c1"># without this, Foo::BAR remains &#39;???&#39;</span>
</span><span class='line'>    <span class="no">Foo</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:remove_const</span><span class="p">,</span> <span class="ss">:BAR</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Foo</span><span class="o">::</span><span class="no">BAR</span> <span class="o">=</span> <span class="vi">@__orig_bar</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;have constant BAR&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Foo</span><span class="o">::</span><span class="no">BAR</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">&#39;???&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The merit of this way is to change constants completely and the constant is evaluated directly.
Adding to it, this method works without any libraries.<br/>
The demerit of this way is that this is something like META programming. This may not be easy to understand for ruby beginner.</p>

<h3>stub_const</h3>

<p>Second option is to use <code>stub_const</code> defined in <a href="https://github.com/rspec/rspec-mocks">rspec-mocks</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># foo_spec.rb</span>
</span><span class='line'><span class="n">describe</span> <span class="no">Foo</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># no need to restore.</span>
</span><span class='line'>    <span class="c1"># It restores after Foo example finished.</span>
</span><span class='line'>    <span class="n">stub_const</span><span class="p">(</span><span class="s1">&#39;Foo::BAR&#39;</span><span class="p">,</span> <span class="s1">&#39;???&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s1">&#39;have constant BAR&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="no">Foo</span><span class="o">::</span><span class="no">BAR</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="s1">&#39;???&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The merit of this way is easy to setup and easy to understand.<br/>
Ths demerit of this way is that <code>stub_const</code> depends on rspec-mocks, so if you want to use <code>stub_const</code> with minitest,
you have to HACK minitest.</p>

<h3>conslusion</h3>

<p>Chosing <code>remove_const</code> vs <code>stub_const</code> depends on your situation. I think if the constant is important for buisiness logic,
you should choose <code>remove_const</code>. If the constant is no so important testing and using rspec, you choose <code>stub_const</code>.<br/>
I think this discussion has no goal, but I think having many options is one of the the ways to be a HACKER.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stub sharedManager with OCMock]]></title>
    <link href="http://blog.yasuoza.com/2014/05/28/stub-sharedmanager-with-ocmock/"/>
    <updated>2014-05-28T13:29:24+00:00</updated>
    <id>http://blog.yasuoza.com/2014/05/28/stub-sharedmanager-with-ocmock</id>
    <content type="html"><![CDATA[<p>If you are iOS/Mac developer, you may have written singleton like following convention:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">static</span> <span class="n">UserModelManager</span> <span class="o">*</span><span class="n">sharedManager_</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">UserModelManager</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedManager</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">sharedManager_</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UserModelManager</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sharedManager_</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>If <code>UserModelManager</code> has <code>secretKey</code> instance method like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">secretKey</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;secret key provided from server side&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you can call <code>secretkey</code> method via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[[</span><span class="n">UserModelManager</span> <span class="n">sharedManager</span><span class="p">]</span> <span class="n">secretkey</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s OK until you have to stub <code>secretKey</code> in a test.</p>

<p>The solution to stub <code>sharedManager</code> and <code>secretkey</code> is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">_mockUserModelManager</span> <span class="o">=</span> <span class="p">[</span><span class="n">OCMockObject</span> <span class="n">niceMockForClass</span><span class="o">:</span><span class="p">[</span><span class="n">UserModelManager</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'><span class="p">[[[</span><span class="n">_mockUserModelManager</span> <span class="n">stub</span><span class="p">]</span> <span class="n">andReturn</span><span class="o">:</span><span class="s">@&quot;test-key&quot;</span><span class="p">]</span> <span class="n">secretkey</span><span class="p">];</span>
</span><span class='line'><span class="p">[[[[</span><span class="n">_mockUserModelManager</span> <span class="n">stub</span><span class="p">]</span> <span class="n">classMethod</span><span class="p">]</span> <span class="n">andReturn</span><span class="o">:</span><span class="n">_mockUserModelManager</span><span class="p">]</span> <span class="n">sharedManager</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>To clean up your stub methods, DO NOT forget <code>stopMocking</code> in <code>tearDown</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">tearDown</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">tearDown</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">_mockUserModelManager</span> <span class="n">stopMocking</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multi GitHub pages with custom domain]]></title>
    <link href="http://blog.yasuoza.com/2014/05/16/multi-github-pages-with-custom-domain/"/>
    <updated>2014-05-16T14:31:42+00:00</updated>
    <id>http://blog.yasuoza.com/2014/05/16/multi-github-pages-with-custom-domain</id>
    <content type="html"><![CDATA[<p>I have two GitHub pages</p>

<ul>
<li><a href="http://www.yasuoza.com/">YasuOza&rsquo;s website</a></li>
<li><a href="http://blog.yasuoza.com/">yasuoza diary</a></li>
</ul>


<p>each sites are hosted by <a href="https://pages.github.com/">GitHub pages</a> using <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages">custom domain</a>.</p>

<p>To use custom domain for GitHub pages, create <code>CNAME</code> file and write like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www.yasuoza.com</span></code></pre></td></tr></table></div></figure>


<p>With this file, you can see domain setting on Github repository > Settings > GitHub Pages like:</p>

<p><img src="http://blog.yasuoza.com/images/2014/05/settings-github-pages.png"></p>

<p>Next, open your DNS configure page, setup like:</p>

<p><img src="http://blog.yasuoza.com/images/2014/05/githubpages-dns.png"></p>

<p>Wait 1~3 hours(depend on you DNS server or environment).</p>

<p>Then open teminal and type like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>dig www.example.com +nostats +nocomments +nocmd
</span><span class='line'><span class="p">;</span>www.example.com.                     IN      A
</span><span class='line'>www.example.com.              3592    IN      CNAME   username.github.io.
</span><span class='line'>username.github.io.           43192   IN      CNAME   github.map.fastly.net.
</span><span class='line'>github.map.fastly.net.        22      IN      A       199.27.76.133
</span></code></pre></td></tr></table></div></figure>


<h3>Tips</h3>

<p>If you publish <em>username</em>.github.io repository to <em>www.yoursite.com</em>, then GitHub redirects
<em>username.github.io</em> to <em>www.yoursite.com</em>.<br/>
However, if you publish <em>another</em> repository to <em>subdomain.yoursite.com</em>, GitHub does not redirect
<em>www.yoursite.com/another</em> to <em>subdomain.yoursite.com</em>.<br/>
If you want to redirect <em>www.yoursite.com/another</em> to <em>subdomain.yoursite.com</em>, you should write
redirect JavaScript like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>   <span class="kd">var</span> <span class="nx">GITHUB_PAGES_HOST</span> <span class="o">=</span> <span class="s1">&#39;www.yoursite.com&#39;</span><span class="p">;</span>
</span><span class='line'>   <span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span> <span class="o">===</span> <span class="nx">GITHUB_PAGES_HOST</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>       <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">GITHUB_PAGES_HOST</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}());</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then <em>www.yoursite.com/another</em> will be redirected to <em>subdomain.yoursite.com</em>.<br/>
Cheers:sunglasses:</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人の信頼を失う方法]]></title>
    <link href="http://blog.yasuoza.com/2014/04/02/how-to-lost-trust/"/>
    <updated>2014-04-02T01:13:24+00:00</updated>
    <id>http://blog.yasuoza.com/2014/04/02/how-to-lost-trust</id>
    <content type="html"><![CDATA[<ul>
<li>経営陣の顔色ばかり気にする</li>
<li>情報を公開/共有しない</li>
<li>女性(特に若い女性)と男性で態度を変える</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kawaii merge diffs in tig]]></title>
    <link href="http://blog.yasuoza.com/2014/02/17/kawaii-merge-diff-in-tig/"/>
    <updated>2014-02-17T01:58:07+00:00</updated>
    <id>http://blog.yasuoza.com/2014/02/17/kawaii-merge-diff-in-tig</id>
    <content type="html"><![CDATA[<p>Tig&rsquo;s original merge diffs looks like this:</p>

<p><img class="center" src="http://blog.yasuoza.com/images/2014/02/original_tig_merge.png"></p>

<p>But I WANT to see merge diff like GitHub&rsquo;s merge diff like:</p>

<p><img class="center" src="http://blog.yasuoza.com/images/2014/02/gh_merge_diff.png"></p>

<p>This is enabled via <a href="https://github.com/jonas/tig/commit/8370101fa9f46d814cef724b65b08e83a2a52e8e">tig@8370101fa</a>.</p>

<p>To power this commit, install tig-HEAD.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://github.com/jonas/tig.git
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>tig
</span><span class='line'><span class="nv">$ </span>brew install autoconf           <span class="c"># If you are using OSX</span>
</span><span class='line'><span class="nv">$ </span><span class="c"># sudo apt-get install autoconf # If you are using Debian</span>
</span><span class='line'><span class="nv">$ </span>make configure                  <span class="c"># This step requires &#39;autoconf&#39; package</span>
</span><span class='line'><span class="nv">$ </span>./configure
</span><span class='line'><span class="nv">$ </span>make
</span><span class='line'><span class="nv">$ </span>make install
</span></code></pre></td></tr></table></div></figure>


<p>After installation, open <code>~/.tigrc</code> and set following option.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>set diff-options = -m --first-parent
</span></code></pre></td></tr></table></div></figure>


<p>Then, merge diffs in tig will be:</p>

<p><img class="center" src="http://blog.yasuoza.com/images/2014/02/kawaii_tig_merge.png"></p>

<p>It&rsquo;s Kawaii :heart_eyes:</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Advanced ruby install via rbenv in OSX]]></title>
    <link href="http://blog.yasuoza.com/2014/01/28/advanced-ruby-install-via-rbenv-in-osx/"/>
    <updated>2014-01-28T04:25:51+00:00</updated>
    <id>http://blog.yasuoza.com/2014/01/28/advanced-ruby-install-via-rbenv-in-osx</id>
    <content type="html"><![CDATA[<p><strong>Parallel compile</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ MAKE_OPTS="-j 4" rbenv install 2.1.0</span></code></pre></td></tr></table></div></figure>


<p>Above example compiles ruby with 4 workers.</p>

<p><strong>Readline support</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install readline
</span><span class='line'>$ RUBY_CONFIGURE_OPTS=--with-readline-dir=`brew --prefix readline` rbenv install 2.1.0</span></code></pre></td></tr></table></div></figure>


<p>Mixed</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ MAKE_OPTS="-j 4" RUBY_CONFIGURE_OPTS=--with-readline-dir=`brew --prefix readline` rbenv install 2.1.0</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins's CSS returns 404 on OSX]]></title>
    <link href="http://blog.yasuoza.com/2014/01/17/jenkins-on-osx-via-homebrew/"/>
    <updated>2014-01-17T02:11:20+00:00</updated>
    <id>http://blog.yasuoza.com/2014/01/17/jenkins-on-osx-via-homebrew</id>
    <content type="html"><![CDATA[<h2>tl;dr</h2>

<p>Create tmp directory under <code>$JENKINS_HOME</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p ~/.jenkins/tmpdir
</span></code></pre></td></tr></table></div></figure>


<p>Then rewrite <code>homebrew.mxcl.jenkins.plist</code> like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dict&gt;</span>
</span><span class='line'>        <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>#{plist_name}<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>        <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;array&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>/usr/bin/java<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>-Dmail.smtp.starttls.enable=true<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>-Dfile.encoding=UTF-8<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>-Djava.io.tmpdir=/Users/__USERNAME__/.jenkins/tmpdir<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>-jar<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>/usr/local/opt/jenkins/libexec/jenkins.war<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>--httpListenAddress=127.0.0.1<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>            <span class="nt">&lt;string&gt;</span>--httpPort=8080<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/array&gt;</span>
</span><span class='line'>        <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>        <span class="nt">&lt;true/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dict&gt;</span>
</span><span class='line'><span class="nt">&lt;/plist&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the point is to set <code>-Djava.io.tmpdir</code> to created tmp directory.</p>

<p>Restart jenkins</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
</span><span class='line'><span class="nv">$ </span>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.jenkins.plist
</span></code></pre></td></tr></table></div></figure>


<h2>Description</h2>

<p>Sometimes, jenkins on OSX returns 404 status for its CSS. So its layout is broken.</p>

<p>The issue is reported at <a href="https://issues.jenkins-ci.org/browse/JENKINS-17526">JENKINS-17526</a> and there is a <a href="https://github.com/jenkinsci/jenkins/pull/1061">patch</a>
for the issue.</p>

<p>To solve the issue jenkins(installed via Homebrew) follow tl;dr section. It should work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress + GitHub Pages + Travis]]></title>
    <link href="http://blog.yasuoza.com/2014/01/13/octopress-plus-github-pages-plus-travis/"/>
    <updated>2014-01-13T06:57:31+00:00</updated>
    <id>http://blog.yasuoza.com/2014/01/13/octopress-plus-github-pages-plus-travis</id>
    <content type="html"><![CDATA[<p>Today I changed my blog generation CI from jenkins to Travis CI.</p>

<p>Following step shows how to make it. Suppose you are in project root.</p>

<p>First, install travis command from rubygems.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install travis
</span></code></pre></td></tr></table></div></figure>


<p>Generate ssh-key accessible to only blog repository.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -C <span class="s1">&#39;youremail@examp.com&#39;</span> -f ~/.ssh/travis_rsa
</span><span class='line'>
</span><span class='line'><span class="c"># Copy public key to clipboard</span>
</span><span class='line'><span class="nv">$ </span>cat ~/.ssh/travis_rsa.pub <span class="p">|</span> pbcopy
</span><span class='line'>
</span><span class='line'><span class="c"># Set copied public key to deploy key in GitHub</span>
</span><span class='line'><span class="nv">$ </span>open  https://github.com/_username_/_repository_/settings/keys
</span></code></pre></td></tr></table></div></figure>


<p>Then, setup <code>.travis.yml</code> like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">language</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ruby</span>
</span><span class='line'><span class="l-Scalar-Plain">rvm</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">2.1.0</span>
</span><span class='line'><span class="l-Scalar-Plain">branches</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">only</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">master</span>
</span><span class='line'><span class="l-Scalar-Plain">before_script</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">git config --global user.name &quot;_username_(via Travis CI)&quot;</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">git config --global user.email &quot;youremail@gmail.com&quot;</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">git remote set-url origin $REPO.git</span>
</span><span class='line'><span class="c1"># array length 23 is calculated later as $RSA_LENGTH</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">if [ -z &quot;$id_rsa_{1..23}&quot; ]; then echo &#39;No $id_rsa_{1..23} found !&#39; ; exit 1; fi</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">echo -n $id_rsa_{1..23} &gt;&gt; ~/.ssh/travis_rsa_64</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">base64 --decode --ignore-garbage ~/.ssh/travis_rsa_64 &gt; ~/.ssh/id_rsa</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">chmod 600 ~/.ssh/id_rsa</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">echo -e &quot;Host github.com\n\tStrictHostKeyChecking no\n&quot; &gt;&gt; ~/.ssh/config</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rake setup_github_pages[$REPO]</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">git checkout -- _config.yml</span>
</span><span class='line'><span class="l-Scalar-Plain">script</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rake generate</span>
</span><span class='line'><span class="l-Scalar-Plain">after_script</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">bundle exec rake deploy</span>
</span><span class='line'><span class="l-Scalar-Plain">env</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">global</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">REPO=&quot;git@github.com:_username_/_repository_&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Encrypt ssh-key via base64.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On a Mac, use this script to generate secure deployment key</span>
</span><span class='line'><span class="nv">$ </span>base64 --break<span class="o">=</span>0 ~/.ssh/travis_rsa &gt; ~/.ssh/travis_rsa_64
</span><span class='line'>
</span><span class='line'><span class="c"># If in linux</span>
</span><span class='line'><span class="c"># base64 --wrap=0 ~/.ssh/travis_rsa &gt; ~/.ssh/travis_rsa_64</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>bash &lt;<span class="o">(</span>cat ~/.ssh/travis_rsa_64 <span class="p">|</span> perl -pe <span class="s1">&#39;s/(.{100})/$1\n/g&#39;</span> <span class="p">|</span> nl <span class="p">|</span> perl -pe <span class="s1">&#39;s/\s*(\d+)\s*(.*)/travis encrypt id_rsa_$1=&quot;$2&quot; --add/&#39;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Count <code>id_rsa_{1..$RSA_LENGTH}</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat ~/.ssh/travis_rsa_64 <span class="p">|</span> perl -pe <span class="s1">&#39;s/(.{100})/$1\n/g&#39;</span> <span class="p">|</span> nl <span class="p">|</span> tail
</span></code></pre></td></tr></table></div></figure>


<p>Finally, you should apply following patch to <code>rake deploy</code> to pulls from origin #{deploy_branch}.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/Rakefile</span>
</span><span class='line'><span class="gi">+++ b/Rakefile</span>
</span><span class='line'><span class="gu">@@ -248,8 +248,8 @@ desc &quot;deploy public directory to github pages&quot;</span>
</span><span class='line'> multitask :push do
</span><span class='line'>   puts &quot;## Deploying branch to Github Pages &quot;
</span><span class='line'>   puts &quot;## Pulling any updates from Github Pages &quot;
</span><span class='line'><span class="gd">-  cd &quot;#{deploy_dir}&quot; do</span>
</span><span class='line'><span class="gd">-    system &quot;git pull&quot;</span>
</span><span class='line'><span class="gi">+  cd &quot;#{deploy_dir}&quot; do</span>
</span><span class='line'><span class="gi">+    system &quot;git pull origin #{deploy_branch}&quot;</span>
</span><span class='line'>   end
</span><span class='line'>   (Dir[&quot;#{deploy_dir}/*&quot;]).each { |f| rm_rf(f) }
</span><span class='line'>   Rake::Task[:copydot].invoke(public_dir, deploy_dir)
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. Connect blog repository to Travis CI, and commit change!</p>

<p>Refs:<br/>
- <a href="http://pchw.github.io/blog/2013/06/27/octopress-travis/  ">http://pchw.github.io/blog/2013/06/27/octopress-travis/  </a>
- <a href="http://www.harimenon.com/blog/2013/01/27/auto-deploying-to-my-octopress-blog/">http://www.harimenon.com/blog/2013/01/27/auto-deploying-to-my-octopress-blog/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker in OSX without dvm]]></title>
    <link href="http://blog.yasuoza.com/2014/01/10/docker-in-osx-without-dvm/"/>
    <updated>2014-01-10T02:35:08+00:00</updated>
    <id>http://blog.yasuoza.com/2014/01/10/docker-in-osx-without-dvm</id>
    <content type="html"><![CDATA[<p>Docker client for OSX released as of <a href="https://github.com/dotcloud/docker/blob/master/CHANGELOG.md#073-2014-01-02">0.7.3</a></p>

<p>Now, we OSX user can access docker container without ssh command by followlig without <a href="http://fnichol.github.io/dvm/">dvm</a></p>

<p>Install docker client via Homebrew:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'><span class="nv">$ </span>brew tap homebrew/binary
</span><span class='line'><span class="nv">$ </span>brew install docker
</span></code></pre></td></tr></table></div></figure>


<p>Next, setup Vagrantfile like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">DOCKER_IP</span>   <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;DOCKER_IP&quot;</span><span class="o">]</span>   <span class="o">||</span> <span class="s2">&quot;192.168.42.43&quot;</span>
</span><span class='line'><span class="no">DOCKER_PORT</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;DOCKER_PORT&quot;</span><span class="o">]</span> <span class="o">||</span> <span class="mi">4243</span>
</span><span class='line'>
</span><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span>     <span class="o">=</span> <span class="s2">&quot;precise64&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;http://files.vagrantup.com/precise64.box&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="no">DOCKER_IP</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:docker</span> <span class="k">do</span> <span class="o">|</span><span class="n">d</span><span class="o">|</span>
</span><span class='line'>    <span class="n">d</span><span class="o">.</span><span class="n">pull_images</span> <span class="s2">&quot;base&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:shell</span><span class="p">,</span> <span class="ss">inline</span><span class="p">:</span> <span class="o">&lt;&lt;-</span><span class="no">SHELL</span>
</span><span class='line'><span class="sh">    sudo sed -i -e &#39;s/DOCKER_OPTS=/DOCKER_OPTS=\&quot;-H #{DOCKER_IP}:#{DOCKER_PORT}\&quot;/g&#39; /etc/init/docker.conf</span>
</span><span class='line'><span class="sh">    sudo service docker restart</span>
</span><span class='line'><span class="no">  SHELL</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then run VM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up
</span></code></pre></td></tr></table></div></figure>


<p>Export <code>DOCKER_HOST</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">DOCKER_HOST</span><span class="o">=</span><span class="s2">&quot;tcp://192.168.42.43:4243&quot;</span> <span class="c"># DOCKER_HOST=&quot;$DOCKER_IP:$DOCKER_PORT&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s all. Now you can access docker container like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run base <span class="nb">echo</span> <span class="s2">&quot;hello world!&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[年末年始に会った友達の言葉]]></title>
    <link href="http://blog.yasuoza.com/2014/01/07/words/"/>
    <updated>2014-01-07T06:43:15+00:00</updated>
    <id>http://blog.yasuoza.com/2014/01/07/words</id>
    <content type="html"><![CDATA[<blockquote><p>大工なんて下請けじゃん</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HBFav-Android 2.1.1リリース]]></title>
    <link href="http://blog.yasuoza.com/2013/12/27/hbfav-android-2-1-1/"/>
    <updated>2013-12-27T04:39:25+00:00</updated>
    <id>http://blog.yasuoza.com/2013/12/27/hbfav-android-2-1-1</id>
    <content type="html"><![CDATA[<p>HBFav for Androidの2.1.1をリリースしました!</p>

<p><a href="https://play.google.com/store/apps/details?id=com.hbfav.android">はてなブックマークをタイムライン形式で HBFav</a></p>

<p>今回のバージョンアップでは</p>

<ul>
<li>ビルトインブラウザ</li>
<li>コメントの閲覧</li>
<li>アプリ単体でのブックマーク登録・更新・削除機能</li>
</ul>


<p>の追加をしました。</p>

<p>いちいちブラウザに飛ぶことはなくなったので、よりシームレスに記事を閲覧することが出来るようになったと思います。</p>

<p><img class="center" src="http://blog.yasuoza.com/images/hbfav/entry_webview.jpg" width="350"></p>

<p><img class="center" src="http://blog.yasuoza.com/images/hbfav/activity_bookmark_entry.jpg" width="350"></p>

<p>OAuth認証したり、異なるサイズのボタンを配置したり、キーボードの開閉に合わせた挙動をさせたりと、まぁまぁ大変でした。<br/>
1週間ブックマークを見る暇なくずっとブックマーク登録画面だけ開発してたなんてときもありましたが、それでも総じて楽しかったです。</p>

<p>一部の端末で正しくOauth認証出来ないバグが確認されております。年明けから対応していきます。Android大変です。。。<br/>
また、アプリが落ちたり、うまく動作しない場合は<a href="https://github.com/yasuoza/HBFav-Android/issues">Github</a>に書いて頂くか、<a href="https://www.twitter.com/yasuoza">@yasuoza</a>まで
お気軽にメンションください。出来る限りのサポートはしていきます。</p>

<p>今後ともHBFav-Androidをよろしくお願いします!</p>

<p>Special thanks :heart::heart::heart:</p>

<ul>
<li><a href="https://www.hatena.com/">株式会社はてな様</a> 問い合わせに対してご丁寧に対応していただきました。</li>
<li><a href="http://stackoverflow.com/">stackoverflowさん</a> 今回も引き続きお世話になりました。</li>
<li><a href="http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html">Android Asset Studioさん</a> UI実装に大変役立ちました。</li>
<li><a href="http://android-holo-colors.com/">Android Holo Colors Generator</a> UI実装に大変役立ちました。</li>
</ul>


<p>年末年始はdockerで遊ぶ予定です。dockerを利用してちょっと作りたいものがあるので、ちょっと実験してみます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scribe-java in Android]]></title>
    <link href="http://blog.yasuoza.com/2013/12/16/scribe-java-in-android/"/>
    <updated>2013-12-16T07:04:52+00:00</updated>
    <id>http://blog.yasuoza.com/2013/12/16/scribe-java-in-android</id>
    <content type="html"><![CDATA[<p>Famous OAuth libraries for Android are</p>

<ul>
<li><a href="https://code.google.com/p/oauth-signpost/">oauth-signpost</a></li>
<li><a href="https://github.com/fernandezpablo85/scribe-java">scribe-java</a></li>
</ul>


<p>There are entries about how to make OAuth authentication using oauth-signpost but I could not find any example using scribe-java, even though it is said</p>

<blockquote><p>Scribe is a mature OAuth library for Java by Pablo Fernandez that is intended to work with all APIs</p></blockquote>

<p><a href="http://oauth.net/code/">http://oauth.net/code/</a></p>

<p>The following example is how to make OAuth 1.0a authentication using scribe-java.</p>

<p>First, create oauth api model:</p>

<figure class='code'><figcaption><span>api/TwitterApi.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TwitterApi</span> <span class="kd">extends</span> <span class="n">DefaultApi10a</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">AUTHORIZE_URL</span> <span class="o">=</span> <span class="s">&quot;https://api.twitter.com/oauth/authorize?oauth_token=%s&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">REQUEST_TOKEN_RESOURCE</span> <span class="o">=</span> <span class="s">&quot;api.twitter.com/oauth/request_token&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ACCESS_TOKEN_RESOURCE</span> <span class="o">=</span> <span class="s">&quot;api.twitter.com/oauth/access_token&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAccessTokenEndpoint</span><span class="o">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;http://&quot;</span> <span class="o">+</span> <span class="n">ACCESS_TOKEN_RESOURCE</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getRequestTokenEndpoint</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;http://&quot;</span> <span class="o">+</span> <span class="n">REQUEST_TOKEN_RESOURCE</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAuthorizationUrl</span><span class="o">(</span><span class="n">Token</span> <span class="n">requestToken</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">AUTHORIZE_URL</span><span class="o">,</span> <span class="n">requestToken</span><span class="o">.</span><span class="na">getToken</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SSL</span> <span class="kd">extends</span> <span class="n">TwitterApi</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAccessTokenEndpoint</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;https://&quot;</span> <span class="o">+</span> <span class="n">ACCESS_TOKEN_RESOURCE</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getRequestTokenEndpoint</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;https://&quot;</span> <span class="o">+</span> <span class="n">REQUEST_TOKEN_RESOURCE</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Twitter &#39;friendlier&#39; authorization endpoint for OAuth.</span>
</span><span class='line'><span class="cm">   *</span>
</span><span class='line'><span class="cm">   * Uses SSL.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Authenticate</span> <span class="kd">extends</span> <span class="n">SSL</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">AUTHENTICATE_URL</span> <span class="o">=</span> <span class="s">&quot;https://api.twitter.com/oauth/authenticate?oauth_token=%s&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getAuthorizationUrl</span><span class="o">(</span><span class="n">Token</span> <span class="n">requestToken</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">AUTHENTICATE_URL</span><span class="o">,</span> <span class="n">requestToken</span><span class="o">.</span><span class="na">getToken</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Just an alias to the default (SSL) authorization endpoint.</span>
</span><span class='line'><span class="cm">   *</span>
</span><span class='line'><span class="cm">   * Need to include this for symmetry with &#39;Authenticate&#39; only.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Authorize</span> <span class="kd">extends</span> <span class="n">SSL</span><span class="o">{}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>(Retrieved from <a href="https://github.com/fernandezpablo85/scribe-java/blob/master/src/main/java/org/scribe/builder/api/TwitterApi.java">scribe/builder/api/TwitterApi.java</a>. You can build your own api model like this.)</p>

<p>Then, use this api model in your Activity with WebView :</p>

<figure class='code'><figcaption><span>OauthActivity.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OauthActivity</span> <span class="kd">extends</span> <span class="n">Activity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CALLBACK_URL</span> <span class="o">=</span> <span class="s">&quot;http://www.twitter.com&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">WebView</span> <span class="n">mWebView</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">OauthService</span> <span class="n">mOauthService</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Token</span> <span class="n">mRequestToken</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mService</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ServiceBuilder</span><span class="o">()</span>
</span><span class='line'>          <span class="o">.</span><span class="na">provider</span><span class="o">(</span><span class="n">TwitterApi</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">apiKey</span><span class="o">(</span><span class="s">&quot;YOUR_API_KEY&quot;</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">apiSecret</span><span class="o">(</span><span class="s">&quot;YOUR_API_SECRET&quot;</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">callback</span><span class="o">(</span><span class="n">HatenaApi</span><span class="o">.</span><span class="na">CALLBACK_URL</span><span class="o">)</span>
</span><span class='line'>          <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mWebView</span> <span class="o">=</span> <span class="o">(</span><span class="n">WebView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">webView</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">clearCache</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">().</span><span class="na">setJavaScriptEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">().</span><span class="na">setBuiltInZoomControls</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">getSettings</span><span class="o">().</span><span class="na">setDisplayZoomControls</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">setWebViewClient</span><span class="o">(</span><span class="n">mWebViewClient</span><span class="o">);</span>
</span><span class='line'>        <span class="n">mWebView</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="n">mWebChromeClient</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">setContentView</span><span class="o">(</span><span class="n">mWebView</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">startAuthorize</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">startAuthorize</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">(</span><span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">protected</span> <span class="n">String</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mRequestToken</span> <span class="o">=</span> <span class="n">mService</span><span class="o">.</span><span class="na">getRequestToken</span><span class="o">();</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">mService</span><span class="o">.</span><span class="na">getAuthorizationUrl</span><span class="o">(</span><span class="n">mRequestToken</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">mWebView</span><span class="o">.</span><span class="na">loadUrl</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">WebViewClient</span> <span class="n">mWebViewClient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WebViewClient</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageStarted</span><span class="o">(</span><span class="n">WebView</span> <span class="n">view</span><span class="o">,</span> <span class="n">String</span> <span class="n">url</span><span class="o">,</span> <span class="n">Bitmap</span> <span class="n">favicon</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">((</span><span class="n">url</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="n">CALLBACK_URL</span><span class="o">)))</span> <span class="o">{</span> <span class="c1">// Override webview when user came back to CALLBACK_URL</span>
</span><span class='line'>                <span class="n">mWebView</span><span class="o">.</span><span class="na">stopLoading</span><span class="o">();</span>
</span><span class='line'>                <span class="n">mWebView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">INVISIBLE</span><span class="o">);</span> <span class="c1">// Hide webview if necessary</span>
</span><span class='line'>                <span class="n">Uri</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>                <span class="kd">final</span> <span class="n">Verifier</span> <span class="n">verifier</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Verifier</span><span class="o">(</span><span class="n">uri</span><span class="o">.</span><span class="na">getQueryParameter</span><span class="o">(</span><span class="s">&quot;oauth_verifier&quot;</span><span class="o">));</span>
</span><span class='line'>                <span class="o">(</span><span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Token</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">protected</span> <span class="n">Token</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="k">return</span> <span class="n">mService</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">(</span><span class="n">mRequestToken</span><span class="o">,</span> <span class="n">verifier</span><span class="o">);</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Token</span> <span class="n">accessToken</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="c1">// AccessToken is passed here! Do what you want!</span>
</span><span class='line'>                        <span class="n">finish</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="kd">super</span><span class="o">.</span><span class="na">onPageStarted</span><span class="o">(</span><span class="n">view</span><span class="o">,</span> <span class="n">url</span><span class="o">,</span> <span class="n">favicon</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yeah! You&rsquo;ve done! It&rsquo;s easy isn&rsquo;t it?</p>

<p>Keypoints are</p>

<ul>
<li>Build service</li>
<li>Get request token</li>
<li>Get authorize url</li>
<li>Get verifier</li>
<li>Get access token based on the verifier</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[諦めるということ]]></title>
    <link href="http://blog.yasuoza.com/2013/12/13/akirameru_toiukoto/"/>
    <updated>2013-12-13T16:09:48+00:00</updated>
    <id>http://blog.yasuoza.com/2013/12/13/akirameru_toiukoto</id>
    <content type="html"><![CDATA[<p>最近、諦める、年をとるということに関するブログや記事に目が行く。<br/>
特に覚えているのは20代の頃を振り返るエンジニアの方のブログだった(記事探せなかった&hellip;)</p>

<p>20代のころは若くて、出来ないエンジニアやディレクターの人にたいそう生意気な態度を取っていたが、
30を過ぎたあたりで、周りとの協調を大事にするようになったと、そういう内容だったと思う。ちょっと違っているかも。</p>

<p>先日20代の後半戦に入った俺は生意気の絶頂にいると思う。
誰よりも技術で突出したいと思っているし、誰よりも論理的でありたいと思っている。
それに、生まれつきのどうしよもない負けず嫌いが相伴って、仕事をしているなかで自分のいいように出来なくて、
明らかに嫌な態度を取ることがある。</p>

<p>20歳前後は、全然そんなこと無いのに、何事も自分は誰よりも考え尽くしているという自信があって、
人の意見なんか3割位聞くと欠点がわかったりして、まるで、生きている価値ないという勢いでその人の意見を否定して生きていた。<br/>
20代も進んでくると人の意見も聞けるようになった。自分の意見を聞いてもらいたかったら、先に人の意見を聞かないと
ダメと先輩に教えられたことが大きな要因だったと思う。一つ丸くなったんだと思う。</p>

<p>ずっと尖っていることは不可能なのだろうか。不可能ではくても、生きづらい世の中なのだろうか。<br/>
でもきっと、ずっと尖っていることは出来ないんだろうと心のどこかで分かり始めてきている。
2~3年で丸くなったように、これからの2~3年でも大なり小なり変わってしまうんではないかと思っている。</p>

<p>それでも俺はずっと尖っていたいし、誰よりも技術的に上を目指して走り続けることを諦めたくはないと本当に思っている。</p>

<p>26歳になった記念として。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HBFav-Android 2.0.0リリース]]></title>
    <link href="http://blog.yasuoza.com/2013/12/09/hbfav-2-0-0-release/"/>
    <updated>2013-12-09T04:52:12+00:00</updated>
    <id>http://blog.yasuoza.com/2013/12/09/hbfav-2-0-0-release</id>
    <content type="html"><![CDATA[<p><strong>iOS版の<a href="http://hbfav.bloghackers.net/">HBFav</a>のAndroid版をリリースしました！</strong></p>

<p><a href="https://play.google.com/store/apps/details?id=com.hbfav.android">はてなブックマークをタイムライン形式で HBFav</a></p>

<p>HBFavとははてなブックマークのお気に入りの人のブックマークをTwitterのタイムライン形式で見れるというアプリです。</p>

<p><img class="center" src="http://blog.yasuoza.com/images/hbfav/timeline.png" width="350"></p>

<p>僕がメインで使う端末をiOSからAndroidに変えて3ヶ月、Androidはとても気に入っていたのですが、ただひとつ、HBFav
のようにはてなブックマークをタイムラインで見れるアプリ、というかHBFavのAndroid版がないことが唯一の不満でした。<br/>
ないものは作るしか無い、そう思って作り始めたのが10月終わり頃、2.0.0は大した機能も無いのに、リリースまで1ヶ月かかったのは
初めてのAndroidアプリということだけではなく、突然の<code>NullPointerException</code>にハマったためでした。</p>

<p>2.0.0は本当に機能が少ないので、ブックマークをするにはこれまでどおり別途
<a href="https://play.google.com/store/apps/details?id=com.hatena.android.bookmark">はてなブックマーク</a>
をインストールして、ブラウザの共有からブックマークして下さい。<br/>
WebViewやバックグラウンド更新などはこれからのアップデートで随時対応していきます!<br/>
フィードバックや要望などありましたら、お気軽に<a href="http://www.twitter.com/yasuoza">@yasuoza</a>までお願いします!</p>

<p>また、HBFavのAndroid版を出すにあたって次の方々にはとても感謝しています。本当にありがとうございました。これからもよろしくお願いします。</p>

<ul>
<li><a href="http://naoya.github.io/">@naoyaさん</a></li>
<li><a href="https://github.com/">Githubさん</a></li>
<li><a href="http://stackoverflow.com/">stackoverflowさん</a></li>
<li><a href="https://www.crashlytics.com/">Crashlyticsさん</a></li>
</ul>


<p>今はビルトインブラウザ機能を実装中なので、それを年末までに出す予定です。乞うご期待！</p>

<p>HBFav-Android ホームページ<br/>
<a href="http://yasuoza.github.io/HBFav-Android">HBFav-Android</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kawaii git diff in my local repository]]></title>
    <link href="http://blog.yasuoza.com/2013/11/21/kawaii-git-diff/"/>
    <updated>2013-11-21T13:34:55+00:00</updated>
    <id>http://blog.yasuoza.com/2013/11/21/kawaii-git-diff</id>
    <content type="html"><![CDATA[<p>Diff on GitHub is super :heart_eyes: to me because it shows method name.<br/>
This post shows how to make it in local repository.</p>

<p>For example, GitHub shows diff with <code>def is_repo?</code>.
<img src="https://qiita-image-store.s3.amazonaws.com/0/4402/34d6ecf8-7437-b881-b1ff-80c90ec1689d.png" alt="Screen Shot 2013-11-21 at 7.17.20 PM.png" />
<a href="https://github.com/github/hub/commit/87050ce94a97b0c382b99c975bde0c833332b38e">https://github.com/github/hub/commit/87050ce94a97b0c382b99c975bde0c833332b38e</a></p>

<p>Normal local diff looks like this :confounded:
<img src="https://qiita-image-store.s3.amazonaws.com/0/4402/b4942b6f-b522-50ac-3a7a-2234b55760b4.png" alt="Screen Shot 2013-11-21 at 7.20.04 PM.png" /></p>

<p>The answer is:</p>

<figure class='code'><figcaption><span>.gitattributes</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>*.rb diff=ruby
</span></code></pre></td></tr></table></div></figure>


<p>My local diff is now :heart_eyes:
<img src="https://qiita-image-store.s3.amazonaws.com/0/4402/b02ab578-b778-048b-5607-877ae8a41ece.png" alt="Screen Shot 2013-11-21 at 7.29.07 PM.png" /></p>

<p>Following <code>diff</code>s are available.<br/>
 <a href="http://git-scm.com/docs/gitattributes#_defining_a_custom_hunk-header">http://git-scm.com/docs/gitattributes#_defining_a_custom_hunk-header</a></p>

<p><strong>2013/11/24 UPDATE</strong><br/>
If you want to define <code>diff</code>s globally, define like following:</p>

<figure class='code'><figcaption><span>~/.gitconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[core]
</span><span class='line'>      attributesfile = ~/.gitattributes_global
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>~/.gitattributes_global</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>*.rb diff=ruby
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
