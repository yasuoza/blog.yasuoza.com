<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: diary | yasuoza diary]]></title>
  <link href="http://blog.yasuoza.com//categories/diary/atom.xml" rel="self"/>
  <link href="http://blog.yasuoza.com/"/>
  <updated>2014-06-22T11:51:00+00:00</updated>
  <id>http://blog.yasuoza.com/</id>
  <author>
    <name><![CDATA[Yasuharu Ozaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog update notificator]]></title>
    <link href="http://blog.yasuoza.com/2012/12/15/blog-update-notificator/"/>
    <updated>2012-12-15T16:22:00+00:00</updated>
    <id>http://blog.yasuoza.com/2012/12/15/blog-update-notificator</id>
    <content type="html"><![CDATA[<pre><code class="ruby">require 'feed-normalizer'
require 'twitter'

option = Hash[[ARGV]]

url = option['--url']

class FeedTweeter
  def initialize(arg = {url: nil})
    @url = arg[:url]
  end

  def site_updated?
    @feed = FeedNormalizer::FeedNormalizer.parse open(@url)
    @new_entry = @feed.entries.first

    return true unless File.exist? "#{current_file_dirpath}/#{remember_text_file}"

    last_tweeted_on = Time.parse(File.open(remember_text_file).read)
    last_tweeted_on &lt; @new_entry.last_updated
  end

  def tweet!
    tweet_text = make_tweet_text
    Twitter.update(tweet_text)

    remember_last_tweeted_on!
  end

  private
    def current_file_dirpath
      "#{File.expand_path('../',  __FILE__)}"
    end

    def remember_text_file
      'last_tweeted_on.txt';
    end

    def make_tweet_text
      blog_title = @feed.title
      new_entry_title = @new_entry.title
      new_entry_url = @new_entry.url
      "#{new_entry_title} - #{blog_title} #{new_entry_url}"
    end

    def remember_last_tweeted_on!
      File.open("#{current_file_dirpath}/#{remember_text_file}", 'w') do |file|
        file.write(@new_entry.last_updated)
      end
    end
end

Twitter.configure do |config|
  config.consumer_key = 'CONSUMER_KEY'
  config.consumer_secret = 'CONSUMER_SECRET'
  config.oauth_token = 'OAUTH_TOKEN'
  config.oauth_token_secret = 'OAUTH_TOKEN_SECRET'
end

feed_tweeter = FeedTweeter.new url: url
if feed_tweeter.site_updated?
  feed_tweeter.tweet!
end
</code></pre>

<p>This works with jenkins very well!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress to Octpress]]></title>
    <link href="http://blog.yasuoza.com/2012/12/09/wordpress-to-octpress/"/>
    <updated>2012-12-09T01:32:00+00:00</updated>
    <id>http://blog.yasuoza.com/2012/12/09/wordpress-to-octpress</id>
    <content type="html"><![CDATA[<p>It&rsquo;s very easy.</p>

<pre><code class="ruby"># Downlowd wordpressdotocm.rb first
# https://github.com/mojombo/jekyll/blob/master/lib/jekyll/migrators/wordpressdotcom.rb

require './wordpressdotcom'

WORDPRESS_XML = 'wordpress_exported.xml'
WORDPRESS_URL = 'http://yourhost.com'

Jekyll::WordpressDotCom.process(WORDPRESS_XML)

# Copy _posts/.html file to markdown_posts/.markdown
FileUtils.mkdir_p('markdown_posts')
Dir[File.join(File.expand_path("../_posts/",  __FILE__),  "*.html")].each do |file|
  # Change wp image path to octpress image path
  # Change SyntaxHighlighter Evolved favor to mrkdown favor
  source = open(file).read
  file.match(/([\w-]+)\.html/)
  File.open("markdown_posts/#{$1}.markdown",  'w') do |dest|
    source.gsub!("#{WORDPRESS_URL}/wp-content/uploads/",  '/images/')
    source.gsub!(/\[(\w+)\]/,  "```")
    source.gsub!(/\[\/\w+\]/,  "```")
    dest.write(source)
  end
end
</code></pre>
]]></content>
  </entry>
  
</feed>
