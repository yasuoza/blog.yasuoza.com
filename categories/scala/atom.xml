<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scala | yasuoza diary]]></title>
  <link href="http://blog.yasuoza.com//categories/scala/atom.xml" rel="self"/>
  <link href="http://blog.yasuoza.com/"/>
  <updated>2014-07-08T12:18:35+00:00</updated>
  <id>http://blog.yasuoza.com/</id>
  <author>
    <name><![CDATA[Yasuharu Ozaki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Set another IP on scalatra spec]]></title>
    <link href="http://blog.yasuoza.com/2013/01/22/set-another-ip-on-scalatra-spec/"/>
    <updated>2013-01-22T11:23:00+00:00</updated>
    <id>http://blog.yasuoza.com/2013/01/22/set-another-ip-on-scalatra-spec</id>
    <content type="html"><![CDATA[<p>When filtering client IP on scalatra, the following code will work</p>

<pre><code class="scala">get("/") {
  if (!ConfigData.allowedIP.contains(request.remoteAddress)) {
    halt(403, "Forbbiden")
  }
  scaml("hello-scalate")
}
</code></pre>

<p>Spec file will be like this</p>

<pre><code class="scala">"GET / on MyServlet from 127.0.0.1" should {
  "return status 200" in {
    get("/", Seq.empty, Map("X-FORWARDED-FOR" -&gt; "127.0.0.1")) {
      status must_== 200
    }
  }
}
"GET / on MyServlet from 0.0.0.0" should {
  "return status 403" in {
    get("/", Seq.empty, Map("X-FORWARDED-FOR" -&gt; "0.0.0.0")) {
      status must_== 403
    }
  }
}
</code></pre>
]]></content>
  </entry>
  
</feed>
